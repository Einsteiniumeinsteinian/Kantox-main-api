name: Re-tag Current Image from latest

on:
  workflow_call:
    inputs:
      AWS_ECR_REPOSITORY:
        required: true
        type: string
        description: 'AWS ECR Repository name (without registry URL)'
      AWS_REGION:
        required: true
        type: string
        description: 'AWS Account Region'
      IMAGE_TAG_SUFFIX:
        required: false
        type: string
        description: 'Image tag to delete and re-tag'
        default: 'latest'
      AWS_ROLE_ARN:
        required: true
        type: string
        description: 'AWS IAM Role ARN for OIDC authentication'
      AWS_ACCOUNT_ID:
        required: true
        type: string
        description: 'AWS Account ID'

jobs:
  re_tag_current_latest:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.AWS_ROLE_ARN }}
          role-session-name: github-actions-ecr-retag
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Verify AWS authentication
        run: |
          echo "Current AWS identity:"
          aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ inputs.AWS_ACCOUNT_ID }}

      - name: Check for existing tag in ECR and delete if exists
        run: |
          set -e  # Fail on error
          set -o pipefail  # Fail if any part of a pipe fails

          echo "üîç Checking for existing image with tag '${{ inputs.IMAGE_TAG_SUFFIX }}' in repository '${{ inputs.AWS_ECR_REPOSITORY }}'..."

          # Check if the image with specified tag exists
          if aws ecr describe-images \
            --repository-name "${{ inputs.AWS_ECR_REPOSITORY }}" \
            --region "${{ inputs.AWS_REGION }}" \
            --image-ids imageTag="${{ inputs.IMAGE_TAG_SUFFIX }}" \
            --no-cli-pager > /dev/null 2>&1; then
            
            echo "‚úÖ Image with tag '${{ inputs.IMAGE_TAG_SUFFIX }}' exists."
            
            # Get image details for logging
            IMAGE_DETAILS=$(aws ecr describe-images \
              --repository-name "${{ inputs.AWS_ECR_REPOSITORY }}" \
              --region "${{ inputs.AWS_REGION }}" \
              --image-ids imageTag="${{ inputs.IMAGE_TAG_SUFFIX }}" \
              --query 'imageDetails[0].[imagePushedAt,imageSizeInBytes,imageDigest]' \
              --output table \
              --no-cli-pager)
            
            echo "Image details:"
            echo "$IMAGE_DETAILS"
            
            echo "üóëÔ∏è Deleting image with tag '${{ inputs.IMAGE_TAG_SUFFIX }}'..."
            
            # Delete the image with specified tag
            DELETE_RESULT=$(aws ecr batch-delete-image \
              --repository-name "${{ inputs.AWS_ECR_REPOSITORY }}" \
              --image-ids imageTag="${{ inputs.IMAGE_TAG_SUFFIX }}" \
              --region "${{ inputs.AWS_REGION }}" \
              --no-cli-pager)
            
            echo "Delete result:"
            echo "$DELETE_RESULT"
            
            # Verify deletion
            if echo "$DELETE_RESULT" | grep -q "imageIds"; then
              echo "‚úÖ Successfully deleted image with tag '${{ inputs.IMAGE_TAG_SUFFIX }}'"
            else
              echo "‚ùå Failed to delete image"
              exit 1
            fi
            
          else
            echo "‚ÑπÔ∏è Image with tag '${{ inputs.IMAGE_TAG_SUFFIX }}' does not exist. Nothing to delete."
          fi

      - name: Verify repository state
        run: |
          echo "üìã Current images in repository '${{ inputs.AWS_ECR_REPOSITORY }}':"
          aws ecr describe-images \
            --repository-name "${{ inputs.AWS_ECR_REPOSITORY }}" \
            --region "${{ inputs.AWS_REGION }}" \
            --query 'imageDetails[].[imageTags[0],imagePushedAt,imageSizeInBytes]' \
            --output table \
            --no-cli-pager || echo "No images found in repository"

      - name: Summary
        run: |
          echo "üéâ Re-tag operation completed successfully!"
          echo "üì¶ Repository: ${{ inputs.AWS_ECR_REPOSITORY }}"
          echo "üè∑Ô∏è Tag processed: ${{ inputs.IMAGE_TAG_SUFFIX }}"
          echo "üåç Region: ${{ inputs.AWS_REGION }}"